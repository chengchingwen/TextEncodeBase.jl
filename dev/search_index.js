var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = TextEncodeBase","category":"page"},{"location":"#TextEncodeBase","page":"Home","title":"TextEncodeBase","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for TextEncodeBase.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [TextEncodeBase]","category":"page"},{"location":"#TextEncodeBase.AbstractTokenizer","page":"Home","title":"TextEncodeBase.AbstractTokenizer","text":"abstract type for tokenizers.\n\nThe tokenization procedure is separate into multiple  TokenStages and recursive calls of splitting   and tokenize. splitting break string into substrings,  and tokenize is responsible for marking the  TokenStages and do the recursive call.\n\n\n\n\n\n","category":"type"},{"location":"#TextEncodeBase.splitting","page":"Home","title":"TextEncodeBase.splitting","text":"splitting(tkr::AbstractTokenizer, x::TokenStages)\n\nSplit x given its tokenization stage. For example,  the default behavior of a document stage is splitting into  sentences (with WordTokenizers.split_sentences).\n\nOverload this method for custom tokenizer.\n\n\n\n\n\n","category":"function"},{"location":"#TextEncodeBase.splitting-Tuple{TextEncodeBase.AbstractTokenizer, TextEncodeBase.TokenStages, Any}","page":"Home","title":"TextEncodeBase.splitting","text":"splitting(tkr::AbstractTokenizer, s::TokenStages, x)\n\nInterface for providing callback for splitting. x is the result of splitting(tkr, s).\n\nOverload this method for custom splitting callback.\n\n\n\n\n\n","category":"method"},{"location":"#TextEncodeBase.tokenize","page":"Home","title":"TextEncodeBase.tokenize","text":"tokenize(tkr::AbstractTokenizer, s::TokenStages, x)\n\nTokenize x. s contain the parent of x.\n\nOverload this method when you need parent information to  tokenize x.\n\n\n\n\n\n","category":"function"},{"location":"#TextEncodeBase.tokenize-Union{Tuple{TS}, Tuple{AT}, Tuple{AT, TS}} where {AT<:TextEncodeBase.AbstractTokenizer, TS<:TextEncodeBase.TokenStages}","page":"Home","title":"TextEncodeBase.tokenize","text":"tokenize(tkr::AbstractTokenizer, x::TokenStages)\n\nTokenize x. \n\nOverload this method for custom tokenizer and stages.\n\n\n\n\n\n","category":"method"}]
}
